{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setinpuValue","onSubmit","e","preventDefault","trim","length","cats","console","log","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GitExpertApp","categories","index","ReactDOM","render","document","getElementById"],"mappings":"mMAoCeA,EAjCK,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAENC,mBAAS,IAFH,mBAElCC,EAFkC,KAEtBC,EAFsB,KAsBzC,OACI,sBAAMC,SAfY,SAACC,GACnBA,EAAEC,iBAGCJ,EAAWK,OAAOC,OAAS,GAC1BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAa,KAGbO,QAAQC,IAAI,oBAMhB,SACI,uBAAOC,KAAM,OAAOC,MAAUX,EAAaY,SApBxB,SAACT,GACxBF,EAAaE,EAAEU,OAAOF,a,+BCRjBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,sBAAKc,UAAU,6DAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,SCHLO,EAAU,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAAgB,ECDf,SAAEA,GAAe,IAAD,EAEdhB,mBAAS,CAC/BuB,KAAK,GACLa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAyBxC,OAjBAC,qBAAW,WAEPxB,EAAQC,GACHwB,MAAK,SAAAC,GAGEhC,QAAQC,IAAI+B,GACZH,EAAS,CACLf,KAAKkB,EACLL,SAAS,SAM1B,CAACpB,IAEGqB,EDtB2BK,CAAc1B,GAAlCa,EAFyB,EAE/BN,KAAca,EAFiB,EAEjBA,QAQtB,OACI,qCACI,qBAAIJ,UAAU,wDAAd,cAA0EhB,EAA1E,OAEEoB,GAAW,mBAAGJ,UAAU,mDAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAESA,GADCA,EAAIC,aEsBvBgB,EAzCM,WAAO,IAAD,EAEa3C,mBAAS,CAAC,cAFvB,mBAEhB4C,EAFgB,KAEJ7C,EAFI,KAIvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ6C,EAAWnB,KAAI,SAACT,EAAU6B,GACtB,OAAO,mCAAwB7B,EAAxB,MAAUA,QAc7B,6BAEQ4B,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAA0BA,SAAWA,GAAtBA,Y,MC3BvC8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0b311735.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nconst AddCategory = ( { setcategories } ) => {\r\n\r\n    const [inputValue, setinpuValue] = useState(''); \r\n\r\n    const handledInputChange = (e) => {\r\n        setinpuValue(e.target.value); \r\n    }\r\n\r\n    const handledSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setcategories(cats => [ inputValue, ...cats ]);\r\n            setinpuValue('');\r\n        }\r\n        else {\r\n            console.log('ning√∫n valor'); \r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handledSubmit }>\r\n            <input type ='text' value = { inputValue } onChange = { handledInputChange }></input>\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setcategories: PropTypes.func.isRequired        \r\n}\r\n\r\nexport default AddCategory; \r\n\r\n\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=hhNNsq5Qg9cUlp5YtBtFCMlD1y07726X`; \r\n    const resp = await fetch(url); \r\n    const { data } = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id, \r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs; \r\n}; ","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce animate__fadeInLeft\">\r\n            <img src={ url } alt={ title } />\r\n            <p> { title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( { category } ) => {\r\n\r\n    const { data: images, loading } = useFetchGifs( category );\r\n\r\n\r\n    // useEffect( ()=> {\r\n    //     getGifs(category)\r\n    //         .then(setimages); \r\n    // }, [ category ]);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__bounce animate__fadeInLeft\" > { category } </h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__bounce animate__flash\" >Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map((img) => (\r\n                        <GifGridItem \r\n                            key={ img.id } \r\n                            { ...img } \r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data:[], \r\n        loading: true\r\n    });\r\n\r\n\r\n    useEffect( ()=> {\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                // setTimeout(() => {\r\n\r\n                    console.log(imgs); \r\n                    setstate({\r\n                        data:imgs, \r\n                        loading: false\r\n                    }); \r\n\r\n                // }, 3000);\r\n            }); \r\n\r\n    }, [category]);\r\n\r\n    return state; \r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GitExpertApp = () => {\r\n\r\n    const [categories, setcategories] = useState(['One Punch']); \r\n\r\n    return (\r\n        <>\r\n            <h1>GitExpertApp</h1>\r\n            <AddCategory setcategories={ setcategories } />\r\n            <hr></hr>      \r\n\r\n            <ol>\r\n                {\r\n                    categories.map((category, index) => {\r\n                        return <li key={ category }> { category } </li>; \r\n                    })\r\n                }\r\n            </ol>\r\n\r\n\r\n            {/* <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid key={ category } category = { category }/>\r\n                    ))\r\n                }\r\n            </ol> */}\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid key={ category } category={ category }  />       \r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GitExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GitExpertApp from './GitExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n  <GitExpertApp />, \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}